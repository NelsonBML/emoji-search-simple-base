{"ast":null,"code":"import _classCallCheck from \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/src/App.js\";\nimport \"./App.css\";\nimport Line from \"./components/Line\";\nimport emojis from \"./emojis.json\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      emojis: emojis\n    };\n    return _this;\n  } //handleJsonInfo = () => {\n  //  const valuesArray = JSON.parse(this.state.emojis)\n  //}\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: \"People\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: \"Button 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 7\n          }, this), this.state.emojis.map(function (elem, index) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                title: elem.title,\n                symbol: elem.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 15\n              }, _this2)\n            }, index + elem.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 13\n            }, _this2);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 5\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return App;\n}(React.Component); //Étape 4 : implémenter le composant Line pour quon puisse copier le symbole en cliquant sur la ligne\n\n\nexport default App;","map":{"version":3,"sources":["/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/src/App.js"],"names":["Line","emojis","React","App","props","state","map","elem","index","title","symbol","Component"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACJ,MAAAA,MAAM,EAAEA;AAAT,KAAb;AAFiB;AAGlB,G,CAGD;AACA;AACA;;;;;WAEA,kBAAU;AAAA;;AACV,0BACE;AAAA,+BACA;AAAA,kCACE;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,cAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAQ,cAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAMG,KAAKI,KAAL,CAAWJ,MAAX,CAAkBK,GAAlB,CAAsB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtC,gCACI;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAED,IAAI,CAACE,KAAlB;AAAyB,gBAAA,MAAM,EAAEF,IAAI,CAACG;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF,eAAUF,KAAK,GAAGD,IAAI,CAACE,KAAvB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKG,WANJ,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,uBADF;AAmBC;;;;EA/BeP,KAAK,CAACS,S,GAiCxB;;;AAEA,eAAeR,GAAf","sourcesContent":["import \"./App.css\";\nimport Line from \"./components/Line\";\nimport emojis from \"./emojis.json\";\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {emojis: emojis}\n  }\n  \n\n  //handleJsonInfo = () => {\n  //  const valuesArray = JSON.parse(this.state.emojis)\n  //}\n\n  render () {\n  return (\n    <>\n    <div>\n      <div>\n        <button className=\"button\">All</button>\n        <button className=\"button\">People</button>\n        <button className=\"button\">Button 3</button>\n      </div>\n      {this.state.emojis.map((elem, index) => {\n        return (\n            <div key={index + elem.title}>\n              <Line title={elem.title} symbol={elem.symbol}/>\n            </div>\n            )\n          }\n      )}\n    </div>\n    </>\n    )\n  }\n}\n//Étape 4 : implémenter le composant Line pour quon puisse copier le symbole en cliquant sur la ligne\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}