{"ast":null,"code":"import _toConsumableArray from \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/src/App.js\";\nimport \"./App.css\";\nimport Line from \"./components/Line\";\nimport emojis from \"./emojis.json\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.clickToFilter = function (kind) {\n      var newEmojisAnimals = _toConsumableArray(_this.state.emojis);\n\n      if (kind === \"Animals\") {\n        //afficher \"All\" si on clique sur Animals\n        var emojisFilterAnimals = newEmojisAnimals.filter(function (elem) {\n          return elem.keywords.includes(\"dog\");\n        });\n        return _this.setState({\n          emojis: emojisFilterAnimals\n        });\n      } else if (kind === \"People\") {\n        //afficher \"People\" si on clique sur People\n        var emojisFilterPeople = newEmojisPeople.filter(function (elem) {\n          return elem.keywords.includes(\"women\");\n        });\n        return _this.setState({\n          emojis: emojisFilterPeople\n        });\n      } else if (kind === \"All\") {\n        //afficher \"Animals\" si on clique sur All\n        return _this.setState({\n          emojis: emojis\n        });\n      } else {}\n    };\n\n    _this.state = {\n      emojis: emojis\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: //handleJsonInfo = () => {\n    //  const valuesArray = JSON.parse(this.state.emojis)\n    //}\n    function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Search\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              return _this2.clickToFilter(\"All\");\n            },\n            className: \"button\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              return _this2.clickToFilter(\"People\");\n            },\n            className: \"button\",\n            children: \"People\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick() {\n              return _this2.clickToFilter(\"Animals\");\n            },\n            className: \"button\",\n            children: \"Animals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), this.state.emojis.map(function (elem, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              title: elem.title,\n              symbol: elem.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, _this2)\n          }, index + elem.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, _this2);\n        })]\n      }, void 0, true);\n    }\n  }]);\n\n  return App;\n}(React.Component); //Étape 4 : implémenter le composant Line pour quon puisse copier le symbole en cliquant sur la ligne\n\n\nexport default App;","map":{"version":3,"sources":["/home/techmanager/ALL_GITS/corrections emojis garden/excercise_intermediaire_emoji_list/emoji-search-simple-base/src/App.js"],"names":["Line","emojis","React","App","props","clickToFilter","kind","newEmojisAnimals","state","emojisFilterAnimals","filter","elem","keywords","includes","setState","emojisFilterPeople","newEmojisPeople","map","index","title","symbol","Component"],"mappings":";;;;;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAMnBC,aANmB,GAMH,UAACC,IAAD,EAAU;AACxB,UAAMC,gBAAgB,sBAAO,MAAKC,KAAL,CAAWP,MAAlB,CAAtB;;AACA,UAAIK,IAAI,KAAK,SAAb,EAAwB;AACtB;AACA,YAAIG,mBAAmB,GAAGF,gBAAgB,CAACG,MAAjB,CAAwB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,QAAL,CAAcC,QAAd,CAAuB,KAAvB,CAAJ;AAAA,SAA5B,CAA1B;AACA,eAAO,MAAKC,QAAL,CAAc;AAACb,UAAAA,MAAM,EAAGQ;AAAV,SAAd,CAAP;AACD,OAJD,MAMK,IAAIH,IAAI,KAAK,QAAb,EAAuB;AAC1B;AAEA,YAAIS,kBAAkB,GAAGC,eAAe,CAACN,MAAhB,CAAuB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,QAAL,CAAcC,QAAd,CAAuB,OAAvB,CAAJ;AAAA,SAA3B,CAAzB;AACA,eAAO,MAAKC,QAAL,CAAc;AAACb,UAAAA,MAAM,EAAGc;AAAV,SAAd,CAAP;AACD,OALI,MAOA,IAAIT,IAAI,KAAK,KAAb,EAAoB;AACvB;AACA,eAAO,MAAKQ,QAAL,CAAc;AAACb,UAAAA,MAAM,EAAGA;AAAV,SAAd,CAAP;AACD,OAHI,MAKA,CAEJ;AAEJ,KA9BoB;;AAEjB,UAAKO,KAAL,GAAa;AAACP,MAAAA,MAAM,EAAEA;AAAT,KAAb;AAFiB;AAGlB;;;;WAmCD;AACA;AACA;AAEA,sBAAU;AAAA;;AACV,0BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAQ,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACI,aAAL,CAAmB,KAAnB,CAAN;AAAA,aAAjB;AAAkD,YAAA,SAAS,EAAC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACA,aAAL,CAAmB,QAAnB,CAAN;AAAA,aAAjB;AAAqD,YAAA,SAAS,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACA,aAAL,CAAmB,SAAnB,CAAN;AAAA,aAAjB;AAAsD,YAAA,SAAS,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAMG,KAAKG,KAAL,CAAWP,MAAX,CAAkBgB,GAAlB,CAAsB,UAACN,IAAD,EAAOO,KAAP,EAAiB;AACtC,8BACI;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,KAAK,EAAEP,IAAI,CAACQ,KAAlB;AAAyB,cAAA,MAAM,EAAER,IAAI,CAACS;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF,aAAUF,KAAK,GAAGP,IAAI,CAACQ,KAAvB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKG,SANJ,CANH;AAAA,sBADF;AAiBC;;;;EA7DejB,KAAK,CAACmB,S,GA+DxB;;;AAEA,eAAelB,GAAf","sourcesContent":["import \"./App.css\";\nimport Line from \"./components/Line\";\nimport emojis from \"./emojis.json\";\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {emojis: emojis}\n  } \n  \n\n  clickToFilter = (kind) => {\n    const newEmojisAnimals = [...this.state.emojis]\n    if (kind === \"Animals\") {\n      //afficher \"All\" si on clique sur Animals\n      let emojisFilterAnimals = newEmojisAnimals.filter(elem => elem.keywords.includes(\"dog\"))\n      return this.setState({emojis : emojisFilterAnimals})\n    }\n\n    else if (kind === \"People\") {\n      //afficher \"People\" si on clique sur People\n      \n      let emojisFilterPeople = newEmojisPeople.filter(elem => elem.keywords.includes(\"women\"))\n      return this.setState({emojis : emojisFilterPeople})\n    }\n    \n    else if (kind === \"All\") {\n      //afficher \"Animals\" si on clique sur All\n      return this.setState({emojis : emojis})\n    }\n\n    else {\n\n    }\n    \n}\n\n    \n    \n  \n    \n  \n\n  //handleJsonInfo = () => {\n  //  const valuesArray = JSON.parse(this.state.emojis)\n  //}\n\n  render () {\n  return (\n    <>\n      <div className=\"Search\">\n        <button onClick={() => this.clickToFilter(\"All\")} className=\"button\">All</button>\n        <button onClick={() => this.clickToFilter(\"People\")} className=\"button\">People</button>\n        <button onClick={() => this.clickToFilter(\"Animals\")} className=\"button\">Animals</button>\n      </div>\n      {this.state.emojis.map((elem, index) => {\n        return (\n            <div key={index + elem.title}>\n              <Line title={elem.title} symbol={elem.symbol}/>\n            </div>\n            )\n          }\n      )}\n    </>\n    )\n  }\n}\n//Étape 4 : implémenter le composant Line pour quon puisse copier le symbole en cliquant sur la ligne\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}